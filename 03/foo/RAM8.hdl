// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
  IN in[16], load, address[3];
  OUT out[16];

  PARTS:
  DMux(in=load, sel=address[2], a=d11, b=d12);

  DMux(in=d11, sel=address[1], a=d21, b=d22);
  DMux(in=d12, sel=address[1], a=d23, b=d24);

  DMux(in=d21, sel=address[0], a=d31, b=d32);
  DMux(in=d22, sel=address[0], a=d33, b=d34);
  DMux(in=d23, sel=address[0], a=d35, b=d36);
  DMux(in=d24, sel=address[0], a=d37, b=d38);

  Register(in=in, load=d31, out=r1);
  Register(in=in, load=d32, out=r2);
  Register(in=in, load=d33, out=r3);
  Register(in=in, load=d34, out=r4);
  Register(in=in, load=d35, out=r5);
  Register(in=in, load=d36, out=r6);
  Register(in=in, load=d37, out=r7);
  Register(in=in, load=d38, out=r8);

  Mux16(a=r1, b=r2, sel=address[0], out=m11);
  Mux16(a=r3, b=r4, sel=address[0], out=m12);
  Mux16(a=r5, b=r6, sel=address[0], out=m13);
  Mux16(a=r7, b=r8, sel=address[0], out=m14);

  Mux16(a=m11, b=m12, sel=address[1], out=m21);
  Mux16(a=m13, b=m14, sel=address[1], out=m22);

  Mux16(a=m21, b=m22, sel=address[2], out=out);
}